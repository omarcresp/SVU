{
    "Format": "2.0.0",
    "ConfigSchema": {

        //GAMEPLAY CHANGES
        "Shadow Stat Changes": {
            "AllowValues": "true, false",
            "Default": true,
            "AllowBlank": false,
            "Description":"Allows for the changing of Shadow stats so Shadowfolk no longer harm the player after completing Sen's storyline.",
            "Section": "Gameplay"
        },
        "Pacifist Mode": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description":"Shadows will be invincible to player attacks.\n\n(Shadow Stat Changes must be set to true for this to take effect.)",
            "Section": "Gameplay"
        },
        "Golem Eradication Substitute": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description": "Changes the Void Spirit eradication goal in the Adventurer's Guild to Golems.\n\nThe player does not have to fight Shadowfolk to reach perfection when enabled.\n\nGolem monster list consists of Stone Golems, Wilderness Golems, Iridium Golems, Metal Heads and Dwarvish Sentries.",
            "Section": "Gameplay"
        },
        "Event Cooldown Length": {
            "AllowValues": "1, 3, 7",
            "Default": "3",
            "AllowBlank": false,
            "Description": "Adjusts number of days you have to wait between Sen's events.\n\n(Default 3 days)",
            "Section": "Gameplay"
        },

        //BEHAVIORS
        "Schedule Type": {
            "AllowValues": "Dynamic, Simplified",
            "Default": "Dynamic",
            "AllowBlank": false,
            "Description": "Whether Sen will visit different random locations every day (Dynamic) or follow a set schedule (Simplified).",
            "Section": "NPC Behavior"
        },
        "Romantic Nickname": {
            "Default": "Starshine",
            "AllowBlank": false,
            "Description": "Sets Sen's romantic nickname for the player.",
            "Section": "NPC Behavior"
        },

        //GRAPHICS
        "Portrait Style": {
            "AllowValues": "7thAxis, Nyapu",
            "Default": "7thAxis",
            "AllowBlank": false,
            "Description":"Sets the mod's portrait style. Don't change this option during festivals.\n\n(Nyapu recommended because Nyapu is amazing.)",
            "Section": "Graphics: General"
        },
        "Reshade Existing Shadows": {
            "AllowValues": "true, false",
            "Default": false,
            "AllowBlank": false,
            "Description":"Recolors existing Shadowfolk overworld sprites to match Sen's style.",
            "Section": "Graphics: General"
        },
        "Spouse Room": {
            "AllowValues": "true, false",
            "Default": true,
            "AllowBlank": false,
            "Description": "Allows you to disable Sen's custom spouse room if you want to decorate it yourself.\n\n(Requires game restart)",
            "Section": "Graphics: General"
        },
        "Have Shadow Kids": {
            "AllowValues": "true, false",
            "Default": true,
            "AllowBlank": false,
            "Description":"Determines if you have Shadow children when you are married to Sen and changes dialogue accordingly.",
            "Section": "Graphics: General"
        },
        "Female Toddler Design": {
            "AllowValues": "Loki, Freya, Nanu, Opal",
            "Default": "Freya",
            "AllowBlank": false,
            "Description":"Sets the design of the female toddler if \"Have Shadow Kids\" is set to true.\n\nNanu and Opal's designs are by TheEspurrQueen on the East Scarp Discord.",
            "Section": "Graphics: General"
        },
        "Male Toddler Design": {
            "AllowValues": "Loki, Freya, Nanu, Opal",
            "Default": "Loki",
            "AllowBlank": false,
            "Description":"Sets the design of the male toddler if \"Have Shadow Kids\" is set to true.\n\nNanu and Opal's designs are by TheEspurrQueen on the East Scarp Discord.",
            "Section": "Graphics: General"
        },
        "UCT Portrait Compatibility": {
            "AllowValues": "true, false",
            "Default": "true",
            "AllowBlank": false,
            "Description":"Use custom child portraits when Unique Children Talk is installed.\n\nLoki and Freya's portraits are by TheEspurrQueen on the East Scarp Discord.\n\n(Requires game restart to disable)",
            "Section": "Graphics: Unique Children Talk"
        },
        //For future update
        /*"7thAxis Nanu and Opal Portraits": {
            "AllowValues": "true, false",
            "Default": "false",
            "AllowBlank": false,
            "Description":"Uses 7thAxis's portraits for the Nanu and Opal designs when UCT Portrait Compatibility is set to true.",
            "Section": "Graphics: Unique Children Talk"
        }*/
    },
    
    //Calculations 
    "DynamicTokens": [

        //World State
        {
            "Name": "IsDitRInstalled", 
            "Value": "{{HasMod: |contains=7thAxis.DitR.CP, 7thAxis.DitR}}"
        },
        {
            "Name": "IsSVEInstalled",
            "Value": "{{HasMod: |contains=FlashShifter.StardewValleyExpandedCP}}",
            "When": { "IsDitRInstalled": false }
        },
        {
            "Name": "LivingWithSen", 
            "Value": "{{Query: '{{spouse}}' = 'SenS' OR '{{roommate}}' = 'SenS'}}",
            "When": { "IsDitRInstalled": false }
        },

        { "Name": "UniqueChildCheck",  "Value": false },
            {
                "Name": "UniqueChildCheck", 
                "Value": "{{HasMod: |contains=shaklin.uniquechildrentalk}}",
                "When": { 
                    "Spouse": "SenS",
                    "Have Shadow Kids": true,
                    "IsDitRInstalled": false }
            },

        {
            "Name": "SenPartnershipRoute",
            "Value": "Platonic",
            "When": { "IsDitRInstalled": false }
        }, 
        {
            "Name": "SenPartnershipRoute", 
            "Value": "Romantic",
            "When": { "HasFlag: |contains=DitR_M_SenS_Romantic": true, "IsDitRInstalled": false }
        },
        {
            "Name": "SenHeartRange",
            "Value": "EarlyHeart",
            "When": { "IsDitRInstalled": false }
        }, 
        {
            "Name": "SenHeartRange", 
            "Value": "LateHeart",
            "When": { 
                "Hearts:SenS": "{{Range: 6, 10}}",
                "IsDitRInstalled": false
            }
        },
        {
            "Name": "SenScheduleRandomizer", 
            "Value": "{{Random:{{Range: 1, 12}}|key=SSR}}",
            "When": { "IsDitRInstalled": false }
        },
        {
            "Name": "MarriageScheduleRandomizer", 
            "Value": "{{Random:{{Range: 1, 7}}}}",
            "When": { "IsDitRInstalled": false }
        },
        {
            "Name": "InRelationshipWithSen", 
            "Value": "{{Query: '{{Relationship:SenS}}' IN ('Married', 'Dating', 'Engaged') OR '{{Roommate}}' = 'SenS'}}",
            "When": { "IsDitRInstalled": false }
        },

        //-- DATE/WEATHER TOKENS
        {
            "Name": "IsWeatherBad",
            "Value": "{{Weather |contains= Rain, Storm, Snow}}",
            "When": { "IsDitRInstalled": false }
        },

        { "Name": "LewisPlantInside",  "Value": false },
            {
                "Name": "LewisPlantInside", 
                "Value": "{{Query: '{{IsWeatherBad}}' IN ('true') OR '{{Season}}' = 'winter'}}",
                "When": { "IsSVEInstalled": false, "IsDitRInstalled": false }
            },

        {
            "Name": "TodaysDate",
            "Value": "{{Season}} {{Day}}",
            "When": { "IsDitRInstalled": false }
        },
        {
            "Name": "WeekDayList",
            "Value": "Sun, Mon, Tue, Wed, Thu, Fri, Sat",
            "When": { "IsDitRInstalled": false }
            
        },
        {
            "Name": "WeekDay",
            "Value": "{{WeekDayList |valueAt={{Query: {{Day}}%7}}}}",
            "When": { "IsDitRInstalled": false }
            
        },
        {
            "Name": "IsOddYear",
            "Value": "{{Query: {{Year}} % 2 = 1}}",
            "When": { "IsDitRInstalled": false }
        },

        { "Name": "YearCheck",  "Value": 2 },
        {
            "Name": "YearCheck", 
            "Value": 1,
            "When": { "Year": 1, "IsDitRInstalled": false }
        },

        { "Name": "FestivalYearCheck", "Value": "" },
        {
            "Name": "FestivalYearCheck",
            "Value": "_y2",
            "When": { "Query: {{Year}} % 2 = 1": false, "IsDitRInstalled": false } //Odd year false
        },

        //--DIALOGUE CHANGES AND RANDOMIZATION--
        {
            "Name": "SenKrobusReference",
            "Value": "{{i18n:Core.SenS.KrobusUnknown}}",
            "When": { "IsDitRInstalled": false }
        },
        {
            "Name": "SenKrobusReference",
            "Value": "{{i18n:Core.SenS.KrobusKnown}}",
            "When": { "Relationship:Krobus: |contains=Unmet": false, "IsDitRInstalled": false }
        },
        {
            "Name": "SenRandTokens", //GOD AXELL WHY, GOD WHY GOD WHY WHHHHYYYY
            "Value": "|AP={{i18n:Rand.SenS.Book.AP.{{Random:{{Range: 1, 7}}|key=SenSR1}}}} |BookType={{i18n:Rand.SenS.Book.Type.{{Random:{{Range: 1, 3}}|key=SenSR2}}}} |Subject={{i18n:Rand.SenS.Book.Subj.{{Random:{{Range: 1, 14}}|key=SenSR3}}}} |Subject2={{i18n:Rand.SenS.Book.Subj2.{{Random:{{Range: 1, 7}}|key=SenSR}}}} |Descriptor={{i18n:Rand.SenS.Book.Obj.{{Random:{{Range: 1, 6}}|key=SenSR5}}}} |Descriptor2={{i18n:Rand.SenS.Book.Obj2.{{Random:{{Range: 1, 6}}|key=SenSR6}}}} |Descriptor3={{i18n:Rand.SenS.Book.Obj3.{{Random:{{Range: 1, 6}}|key=SenSR7}}}} |Descriptor4={{i18n:Rand.SenS.Book.Obj4.{{Random:{{Range: 1, 6}}|key=SenSR8}}}} |Descriptor5={{i18n:Rand.SenS.Book.Obj5.{{Random:{{Range: 1, 5}}|key=SenSR9}}}} |BookPeople={{i18n:Rand.SenS.Book.People.{{Random:{{Range: 1, 9}}|key=SenSR10}}}} |Author={{i18n:Rand.SenS.Book.Author.{{Random:{{Range: 1, 8}}|key=SenSR11}}}} |Author2={{i18n:Rand.SenS.Book.Author2.{{Random:{{Range: 1, 5}}|key=SenSR12}}}} |CrocItem={{i18n:Rand.SenS.CrocItem.{{Random:{{Range: 1, 7}}|key=SenSR13}}}} |CrocColor={{i18n:Rand.SenS.CrocColor.{{Random:{{Range: 1, 5}}|key=SenSR14}}}} |Image={{i18n:Rand.SenS.Image.{{Random:{{Range: 1, 9}}|key=SenSR15}}}} |Animal={{i18n:Rand.SenS.Animal.{{Random:{{Range: 1, 5}}|key=SenSR16}}}} |Flavor={{i18n:Rand.SenS.Flavor.{{Random:{{Range: 1, 5}}|key=SenSR17}}}} |FoodStyle={{i18n:Rand.SenS.FoodStyle.{{Random:{{Range: 1, 4}}|key=SenSR18}}}} |Food={{i18n:Rand.SenS.Food.{{Random:{{Range: 1, 7}}|key=SenSR19}}}} |Spikes={{i18n:Rand.SenS.Spikes.{{Random:{{Range: 1, 4}}|key=SenSR20}}}} |Symbolism={{i18n:Rand.SenS.CrocusSymbolism.{{Random:{{Range: 1, 4}}|key=SenSR21}}}} |Object={{i18n:Rand.SenS.FoundObjects.{{Random:{{Range: 1, 7}}|key=SenSR22}}}} |Object2={{i18n:Rand.SenS.FoundObjects2.{{Random:{{Range: 1, 4}}|key=SenSR23}}}} |People={{i18n:Rand.SenS.People.{{Random:{{Range: 1, 12}}|key=SenSR24}}}} |SpringCrop={{i18n:Rand.SenS.SpringCrop.{{Random:{{Range: 1, 5}}|key=SenSR25}}}} |Expression={{i18n:Rand.SenS.Expression.{{Random:{{Range: 1, 5}}|key=SenSR26}}}} |ClosingEH44={{i18n:Rand.SenS.EH.44.{{Random:{{Range: 1, 3}}|key=SenSR27}}}} |ClosingEH46={{i18n:Rand.SenS.EH.46.{{Random:{{Range: 1, 3}}|key=SenSR28}}}} |ClosingEH48={{i18n:Rand.SenS.EH.48.{{Random:{{Range: 1, 3}}|key=SenSR29}}}} |ClosingEH52={{i18n:Rand.SenS.EH.52.{{Random:{{Range: 1, 3}}|key=SenSR30}}}} |ClosingEH53={{i18n:Rand.SenS.EH.53.{{Random:{{Range: 1, 4}}|key=SenSR31}}}} |GameResult1={{i18n:Rand.SenS.EH.54.1.{{Random:{{Range: 1, 2}}|key=SenSR32}}}} |GameResult2={{i18n:Rand.SenS.EH.54.2.{{Random:{{Range: 1, 2}}|key=SenSR33}}}} |QuirkyAction={{i18n:Rand.SenS.EH.56.{{Random:{{Range: 1, 4}}|key=SenSR34}}}} |ClosingLH52={{i18n:Rand.SenS.LH.52.{{Random:{{Range: 1, 3}}|key=SenSR35}}}} |ClosingSR1={{i18n:Relationship.SenS.RN.1.{{Random:{{Range: 1, 3}}|key=SenSR36}}}} |RainJoke={{i18n:Relationship.SenS.RN.3.{{Random:{{Range: 1, 3}}|key=SenSR37}}}} |IndoorJoke={{i18n:Relationship.SenS.ID.3.{{Random:{{Range: 1, 3}}|key=SenSR38}}}} |SDay19={{i18n:Rand.SenS.SDay19.{{Random:{{Range: 1, 3}}|key=SenSR39}}}}",
            "When": { "IsDitRInstalled": false }
        },
        {
            "Name": "RelationshipTokens",
            "Value": "|SenRelationshipTerm={{i18n:Core.SenS.RelationshipTerm.{{Relationship:SenS |contains=Married, Dating, Engaged}}}} |SenKrobusReference={{SenKrobusReference}} |RomanticNick={{Romantic Nickname}}",
            "When": { "IsDitRInstalled": false }
        },
            //--SEN OVERRIDE DIALOGUE GENERATION--
            { "Name": "SenOverrideConditions", "Value": "Inactive" },
            { "Name": "SSSD", "Value": "Empty" }, //Empty keeps SenOverrideDialogue from screaming abt being empty on disabled days
            { "Name": "SSRD",  "Value": "" },
            { "Name": "SSKD", "Value": "" },
        {
            "Name": "SenOverrideDay",
            "Value": "{{Query: {{Random: {{Range: 1, 5}}|key=SSDO}} = 1 }}",
            "When": { "IsDitRInstalled": false }
        },
        {
            "Name": "OverrideTheOverrideWithRelationshipDialogue",
            "Value": "{{Query: {{Random: {{Range: 1, 3}}|key=SSDOR}} = 1 }}",
            "When": { "IsDitRInstalled": false }
        },
        {
            "Name": "SenOverrideConditions",
            "Value": "Active",
            "When": {
                "SenOverrideDay": true,
                "HasFlag: |contains=DitR_M_SenS_OverrideSeenToday": false,
                "IsDitRInstalled": false
            }
        },   
        {
            "Name": "SSSD",
            "Value": "{{i18n:Core.SenS.Seasonal.{{season}}.{{Random:{{Range: 1, 10}}|key=SenA{{Time}}}}{{SenRandTokens}}}}",
            "When": { "SenOverrideConditions": "Active", "IsDitRInstalled": false }
        },
        {
            "Name": "SSRD",
            "Value": "{{i18n:Core.SenS.RelationshipOverride.{{Random:{{Range: 1, 10}}|key=SenB{{Time}}}}{{RelationshipTokens}}}}++",
            "When": {
                "HasSeenEvent: |contains=7thAxis.DitR_Events.SenS.10h.P3": true,
                "Hearts:SenS": "{{Range: 8, 14}}",
                "SenOverrideConditions": "Active",
                "IsDitRInstalled": false
            }
        },    
        {
            "Name": "SSKD",
            "Value": "{{i18n:Core.SenS.KrobusCommentary.{{Random:{{Range: 1, 4}}|key=SenC{{Time}}}}}}++",
            "When": {
                "Relationship:Krobus |contains=Unmet": false,
                "SenOverrideConditions": "Active",
                "IsDitRInstalled": false
            }
        },
        {
            "Name": "SenOverrideDialogue",
            "Value": "{{Random:{{SSRD}} {{SSKD}} {{SSSD}}|key=SenZ{{Time}}|inputSeparator=++}}",
            "When": { "SenOverrideConditions": "Active", "IsDitRInstalled": false }
        },
        {
            "Name": "SenOverrideDialogue",
            "Value": "{{i18n:Core.SenS.RelationshipOverride.{{Random:{{Range: 1, 10}}|key=SenB{{Time}}}}{{RelationshipTokens}}}}",
            "When": {
                "InRelationshipWithSen": true,
                "OverrideTheOverrideWithRelationshipDialogue": true,
                "SenOverrideConditions": "Active",
                "IsDitRInstalled": false
            }
        },

        //Other Stuff
        {
            "Name": "SenSpouseRoom",
            "Value": "SenSpouseRoom",
            "When": { "Spouse Room": true, "IsDitRInstalled": false }
        },
        {
            "Name": "SenSpouseRoom",
            "Value": "7thAxis.LitD/SpouseRoomEmpty",
            "When": { "Spouse Room": false, "IsDitRInstalled": false }
        }
     ],
     //File Loader
    "Changes": [
        {
			"Action": "Include",
			"FromFile": "Loaders/FileLoader.json",
            "When": { "IsDitRInstalled": false }
		}
    ]
}

